"""
    Строка
    Последовательность символов
    8. Строки в Python неизменяемые!!!!!

    Строку можно умножать на число
    'hello' * 10  =>  'hellohellohellohellohellohellohellohellohellohellohello'

    Также имеются функции для работы со строками:

    isalpha() - определяет, состоит ли строка только из алфавитных символов
    isdigit() - определяет, состоит ои строка только из цифр
    isnumeric() - определяет, является ли строка числом

    replace(что_ищем, чем_заменяем, [сколько_замен]) - заменяет в строке одну подстроку на другую.
        Функция не изменяет строку, но возвращает изменённую!
    strip() - удаляет лишние пробельные символы в начале и в конце строки (пробел, перенос строки, табуляция).
        Функция не изменяет строку, но возвращает изменённую!
    split([разделитель]) - разделяет строку на части по определённым разделителям (по-умолчанию пробел, с удалением пустых строк)
        Функция возвращает список!!!
    find(str, [start], [end]) - возвращает индекс первого вхождения подстроки str в строке.
        Если подстрока не найдена, возвращается -1.
        Необязательные параметры: start, end - задают индекс начала и конца поиска в строке.
    join(массив_строк) - объединяет строки из массива в одну, разделяя каждую данной строкой.
        Пример: '-'.join(['a', 'b', 'c'])
        Результат работы функции: 'a-b-c'
    count(str, [start], [end]) - определяет кол-во вхождений подстроки str в строку.
        Необязательные параметры: start - индекс начала поиска, end - индекс конца поиска
    zfill(count) - дополняет начало строки нулями до размера count.

    startswith(str) - определяет, начинается ли строка с подстроки str.
    endswith(str) - определяет, оканчивается ли строка подстрокой str.
"""

# Чтение строки с клавиатуры
line = input()
print(line.split())
print(len(line))